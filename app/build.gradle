apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    def versionPropsFile = file('version.properties')
    def versionBuild

    println("versionBuild-0:" + versionBuild)

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
        println("versionProps-1:" + versionProps.toString())
        println("versionBuild-1:" + versionBuild)
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

//    ext.autoIncrementBuildNumber = {
//        if (versionPropsFile.canRead()) {
//            def Properties versionProps = new Properties()
//            versionProps.load(new FileInputStream(versionPropsFile))
//            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
//            println("versionBuild-2:" + versionBuild)
//            versionProps['VERSION_BUILD'] = versionBuild.toString()
//            versionProps.store(versionPropsFile.newWriter(), null)
//        } else {
//            throw new FileNotFoundException("Could not read version.properties!")
//        }
//    }

    println("versionBuild-3:" + versionBuild)

    defaultConfig {
        applicationId "com.xoska.testci"
        minSdkVersion 15
        targetSdkVersion 28
        versionName "0.1"
        versionCode versionBuild

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")")
    }

//    gradle.taskGraph.whenReady { taskGraph ->
//        if (taskGraph.hasTask(assembleDebug)) {
//            autoIncrementBuildNumber()
//        } else if (taskGraph.hasTask(assembleRelease)) {
//            autoIncrementBuildNumber()
//        }
//    }

    signingConfigs{
        releaseWithSignedKey {
            storeFile file(SIGNED_STORE_FILE)
            storePassword SIGNED_STORE_PASSWORD
            keyAlias SIGNED_KEY_ALIAS
            keyPassword SIGNED_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseWithSignedKey
        }
        debug{
            signingConfig signingConfigs.releaseWithSignedKey
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
